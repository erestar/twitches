jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_SHOPKEEPER:       ROLE_SHOPPER

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true


        oauth_authorize:
            pattern: ^/oauth/v2/auth
            anonymous: true
            logout: true
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v2/auth_login_check
                login_path: /oauth/v2/auth_login

        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        client:
            pattern:  ^/
            anonymous: true
            logout: true
            form_login: 
                provider: fos_userbundle
                login_path: /login
                check_path: fos_user_security_check
                success_handler: erestar.twitches.authentication_handler
                failure_handler: erestar.twitches.authentication_handler
        # secured:
        #     pattern: ^/
        #     anonymous: true
        #     form_login:
        #         provider: fos_userbundle
        #         csrf_provider: form.csrf_provider
        #     logout: true

    access_control:
        - { path: ^/oauth/v2/auth_login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/oauth/v2/auth, roles: ROLE_ADMIN }
        # - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure, roles: ROLE_ADMIN }
        # - { path: ^/oauth/v2/auth_login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
        # - { path: ^/oauth/v2/auth$, roles: ROLE_ADMIN }
        # - { path: ^/secure, roles: ROLE_ADMIN }
        - { path: ^/client/force, roles: ROLE_SHOPPER }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
